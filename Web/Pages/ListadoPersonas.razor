@page "/listadopersona"
@using Entities
@using Dtos



<h3>ListadoPersona</h3>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Email</th>
            <th>Fecha Nacimiento</th>
            <th>Tipo Persona</th>
            <th>Dirección</th>
            <th>Legajo</th>
            <th>Plan</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var persona in personas)
        {
            <tr>
                <td>@persona.Nombre</td>
                <td>@persona.Apellido</td>
                <td>@persona.Email</td>
                <td>@persona.FechaNacimiento</td>
                <td>@persona.TipoPersona</td>
                <td>@persona.Direccion</td>
                <td>@persona.Legajo</td>
                <td>@persona.PlanDesc</td>
                <td><a class="text-primary" style="cursor:pointer" @onclick="@(() => Borrar(persona.Id))">Borrar</a></td>
                <td><a class="text-primary" style="cursor:pointer" href="modificarpersona/@persona.Id">Modificar</a></td>
            </tr>
        }
    </tbody>
</table>

<a href="/">Volver</a>
<a class="mx-3" href="altapersona">Alta de persona</a>


@code {
    @inject NavigationManager NavigationManager

    List<PersonaDto> personas = new List<PersonaDto>();

    private readonly HttpClient http = new()
        {
            BaseAddress = new Uri("http://localhost:5297")
        };

    protected override async Task OnInitializedAsync()
    {

        personas = await http.GetFromJsonAsync<List<PersonaDto>>("personas");

    }

    protected async void Borrar(int id)
    {
        await http.DeleteAsync($"personas/{id}");

        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

}